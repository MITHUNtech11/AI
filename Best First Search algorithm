edge(a, b). edge(a, c). edge(b, d). edge(b, e).
edge(c, f). edge(c, g). edge(d, h). edge(e, h).
edge(f, h). edge(g, h).

h(a, 7). h(b, 6). h(c, 4). h(d, 3).
h(e, 2). h(f, 5). h(g, 6). h(h, 0).

best_first(Start, Goal, Path) :-
    bfs([[Start]], Goal, Rev), reverse(Rev, Path).

bfs([[Goal|Rest]|_], Goal, [Goal|Rest]).
bfs([[Node|Rest]|Others], Goal, Path) :-
    findall([Next,Node|Rest],
            (edge(Node, Next), \+ member(Next, [Node|Rest])),
            Children),
    merge(Children, Others, Open),
    bfs(Open, Goal, Path).

merge([], Open, Open).
merge([P|Ps], Open, Result) :-
    insert(P, Open, Open1),
    merge(Ps, Open1, Result).

insert(Path, [], [Path]).
insert(Path, [H|T], [Path,H|T]) :-
    f(Path, Fp), f(H, Fh), Fp =< Fh, !.
insert(Path, [H|T], [H|T1]) :-
    insert(Path, T, T1).

f([Node|_], F) :- h(Node, F).


query:
?- best_first(a, h, Path).
