def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True
    for col in range(3):
        if all(row[col] == player for row in board):
            return True
    if all(board[i][i] == player for i in range(3)) or \
       all(board[i][2-i] == player for i in range(3)):
        return True
    return False

def is_full(board):
    return all(cell in ['X', 'O'] for row in board for cell in row)

def tic_tac_toe():
    board = [['1','2','3'], ['4','5','6'], ['7','8','9']]
    current_player = 'X'
    while True:
        print_board(board)
        move = input(f"Player {current_player}, enter your move (1-9): ")
        if move not in '123456789':
            print("Invalid input.")
            continue
        move = int(move) - 1
        r, c = divmod(move, 3)
        if board[r][c] in ['X', 'O']:
            print("Cell already taken.")
            continue
        board[r][c] = current_player
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        if is_full(board):
            print_board(board)
            print("It's a draw!")
            break
        current_player = 'O' if current_player == 'X' else 'X'

tic_tac_toe()
